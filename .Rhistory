?qbeta
?invNorm
?choose
choose(5, 4)
choose(5, 5)
.5^4
*4
ans * 4
[1] * 4
0.625*4
0.0625*4
round(qnorm(.95, mean = 1100, sd = 75 / sqrt(100) ), 3)
round(pnorm(.51, mean = 0.5, sd = sqrt(1 / 12 / 100), lower.tail = FALSE), 3)
round(pnorm(.5, mean = 0.5, sd = sqrt(1 / 12 / 100), lower.tail = FALSE), 3)
round(pnorm(.25, mean = 0.5, sd = sqrt(1 / 12 / 100), lower.tail = FALSE), 3)
round(pnorm(.75, mean = 0.5, sd = sqrt(1 / 12 / 100), lower.tail = FALSE), 3)
round(pnorm(.10, mean = 0.5, sd = sqrt(1 / 12 / 100), lower.tail = FALSE), 3)
round(pnorm(.10, mean = 0.5, sd = sqrt(1 / 12 / 1000), lower.tail = FALSE), 3)
round(pnorm(.25, mean = 0.5, sd = sqrt(1 / 12 / 1000), lower.tail = FALSE), 3)
round(pnorm(.5, mean = 0.5, sd = sqrt(1 / 12 / 1000), lower.tail = FALSE), 3)
round(pnorm(.75, mean = 0.5, sd = sqrt(1 / 12 / 1000), lower.tail = FALSE), 3)
setwd("~/Courses/Coursera/Data Science Specialization/Reproducible Research/Assignments/Assignment1/RepData_PeerAssessment1")
source('~/.active-rstudio-document', echo=TRUE)
steps$time_of_week
library(lattice)
ddply
?ddply
weeksteps_perinterval <- ddply(steps, .(time_of_week, interval), summarize, average_steps=mean(steps))
weeksteps_perinterval
?xyplot
xyplot(average_steps ~ interval | time_of_week, data=weeksteps_perinterval, layout=c(1,2))
xyplot(average_steps ~ interval | time_of_week, data=weeksteps_perinterval, layout=c(1,2), type='l')
xyplot(average_steps ~ interval | time_of_week, data=weeksteps_perinterval, layout=c(1,2), type='l', xlab="Interval", ylab="Average Steps", main="Average Steps Per Interval Across all Days")
